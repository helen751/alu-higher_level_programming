>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[2]], [[5]])
[[10]]

>>> matrix_mul([[1, 0], [0, 1]], [[1, 2], [3, 4]])
[[1, 2], [3, 4]]

>>> matrix_mul([[1, 2], [3, 4]], [[2], [1]])
[[4], [10]]

# Error cases
>>> matrix_mul("not a list", [[1, 2]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix_mul([[1, 2]], "not a list")
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix_mul([1, 2], [[1, 2]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2]], [1, 2])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> matrix_mul([], [[1, 2]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> matrix_mul([[1, "two"]], [[1, 2]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2]], [[1, "two"]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1, 2, 3], [4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2]], [[1, 2, 3], [4, 5]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[1, 2]], [[1], [2], [3]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
